apiVersion: apps/v1
kind: Deployment
metadata:
  name: homework-deployment
  namespace: homework
  labels:
    app: homework-web
    component: webserver
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: homework-web
  template:
    metadata:
      labels:
        app: homework-web
    spec:
      serviceAccountName: monitoring
      nodeSelector:
        homework: "true"
      initContainers:
        - name: download-index
          image: alpine:3.14
          command: ['sh', '-c']
          args:
            - |
              echo "<html><body><h1>Homework Web Server</h1><p>Welcome to my first homework!</p><p>Generated at: $(date)</p></body></html>" > /init/index.html;
          volumeMounts:
            - name: homework-volume
              mountPath: /init
        - name: fetch-metrics
          image: curlimages/curl:8.6.0
          command: ['sh', '-c']
          args:
            - |
              until curl -k -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt https://kubernetes.default.svc/healthz >/dev/null 2>&1; do
                sleep 2
              done
              curl -k -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
                --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
                https://kubernetes.default.svc/metrics > /metrics-tmp/metrics.html
              echo "<html><body><h1>Kubernetes Metrics</h1><pre>" > /metrics-tmp/metrics.tmp
              cat /metrics-tmp/metrics.html >> /metrics-tmp/metrics.tmp
              echo "</pre></body></html>" >> /metrics-tmp/metrics.tmp
              mv /metrics-tmp/metrics.tmp /metrics-tmp/metrics.html
          volumeMounts:
            - name: homework-volume
              mountPath: /metrics-tmp
      containers:
      - name: web-server
        image: nginx:alpine
        readinessProbe:
          httpGet:
            path: /index.html
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        ports:
          - containerPort: 8000
        volumeMounts:
          - name: homework-volume
            mountPath: /homework
          - name: config-volume
            mountPath: /homework/conf
          - name: nginx-config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "rm -f /homework/index.html /homework/metrics.html"]
      volumes:
      - name: homework-volume
        persistentVolumeClaim:
          claimName: homework-pvc
      - name: config-volume
        configMap:
          name: homework-config
      - name: nginx-config
        configMap:
          name: nginx-conf
          items:
          - key: default.conf
            path: default.conf